<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="Button1.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        iVBORw0KGgoAAAANSUhEUgAAABYAAAAWCAYAAADEtGw7AAAAAXNSR0IArs4c6QAAAARnQU1BAACxjwv8
        YQUAAAAgY0hSTQAAeiYAAICEAAD6AAAAgOgAAHUwAADqYAAAOpgAABdwnLpRPAAAA8pJREFUSEvllG1M
        01cUxg9taetarYItXWmlgWHBDCyCxekIjbDFAAuBtRaE0QjlZVAEZUUrCpZR6dBhxRJwZkyjEujkA24D
        Bs6NkanJNpNlOKdWGlaIgy0zM1myLKHP/oQRM7PMSfZpO8n9cHOe87vnSc65RP+r4F4iYh8nNpkokuqI
        Qz3/hv16BlJDLHmzWKfryvwytUlbFuGQ8mLsEUuns28ytS4KkDnE+pJ+o88x1Ijc9pfvyyvFVaQlLjc3
        YAlwG1PTQKwQ+0pdcX+Br+nDepSd2wmNIxYhVaKfg41C8zz8yciWBXlok0Rv6n/lu8ZLdShxGxHftg4C
        GwsK22qoTOEdtJGWLShLiTZ3KUlk4a9fbuWms9qYROcjbx5h7q3EkjSu0BW9lzdl+8yK4oF8JJyPwsq3
        OAh28hBRo3CnVGhlC5X5RFcxQLL9IQmHLzeOdV5z3YttU5nJTDza/wd83v5WCgg9KtYXDeZNHrq+D6Vj
        BdjyfixC+4SQvyOak1Qvd0t1qxQcE9EzGWuIjIZXSXVAGV83WHtl5O4gPvVexrErR35UOZW7qIV4gm4G
        +i6xlG1iXelHxin7jYMwf1GI1E82IXr4aUS5ZZBZVvUKUgJlK3J4D23y81nrK3vKRvtu9fgv3ulD97dn
        4PacQ/3Y3tnIE4pyxr4wyhWmKx8tnHzjtg2vjZcj8/OtSLymwoYP1s4prJILT73EVSh3S+ddPQyRaVly
        livjVsGwDoe/rscZzymc8rjQ5e3AgauW2eTexPO1H1dPt07aYb1ThdwbGUgZj0fSqNof3hTayzdwQkUG
        PjFL8udQHg3mxtfE5iQ5NRPaoQRUj5eg3fsm2idb0eFzounmQTinHTjkq0WhV49Mrxbbrm/xR58I7xNW
        8RSx6hji3f+L4ZLtCyJxo5AdViHdHtki9ySNqVHo0aN5igF+34zjPzhgn61DxUwBdsymIfv2C3712age
        yesi+ZoNERQ88TcTK6ghElgoUFDJMkS65HfTvnoeO2eyUf/THrQ8aEDNgxIU/6LHDl+Gf+PFmL6wt6Xy
        wOrVVAvt4/cgqJeI30NsoZVjWNcZ4TF401H+ax72/GbC7rkimGZy5jYNxPWudYcpWNk8Ssdzj4cuKiSn
        eSQdZnOCbILt6tPRHvOMEXbshWW2HKlDSRfi+p+Vk4MIwD+HLio3+yIp8Z6SIz8WbEjq1kzUfrPLnzWc
        7k4bSA2b15zFySeHLlZoRqJp23QCW3VSmaPpinO+OJKsmM8tqdNH2yhEFjEn0IRsfgPMAVYwH8p/On4H
        GJyBTsaoQbkAAAAASUVORK5CYII=
</value>
  </data>
</root>